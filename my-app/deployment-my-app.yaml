apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-app
  namespace: myapp
  annotations:
    image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"my-app-image:latest"},"fieldPath":"spec.template.spec.containers[?(@.name==\"myapp\")].image"}]'
spec:
  selector:
    matchLabels:
      app: myapp
  replicas: 1
  template:
    metadata:
      labels:
        app: myapp
        version: "1"
      annotations:
        sidecar.istio.io/inject: "true"
    spec:
      containers:
        - name: myapp
          image: my-app-image:latest
          imagePullPolicy: "Always"
          ports:
            - containerPort: 8080
          resources:
            requests:
              cpu: "10m"
              memory: "5Mi"
            limits:
              cpu: 0.1
              memory: "100Mi"
          readinessProbe:
            httpGet:
              path: "/health"
              port: 8080
            initialDelaySeconds: 3
            periodSeconds: 3
            failureThreshold: 1
            timeoutSeconds: 1
          livenessProbe:
            httpGet:
              path: "/live"
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 3
            failureThreshold: 1
            timeoutSeconds: 1
          volumeMounts:
            - name: my-configmap-html-volume
              mountPath: "/myapp/html/"
              readOnly: true
            - name: my-secret-page-volume
              mountPath: "/myapp/secret/"
              readOnly: true
            - name: my-app-pvc-volume
              mountPath: "/myapp/pvc/"
              readOnly: false
      serviceAccountName: myapp-sa
      securityContext:
        runAsUser: 1000
      volumes:
        - name: my-configmap-html-volume
          configMap:
            name: my-configmap-html
        - name: my-secret-page-volume
          secret:
            secretName: my-secret-html
        - name: my-app-pvc-volume
          persistentVolumeClaim:
            claimName: my-app-pvc

